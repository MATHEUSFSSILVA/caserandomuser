// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using caserandomuser.Context;

#nullable disable

namespace caserandomuser.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241019000719_CriandoBanco")]
    partial class CriandoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("caserandomuser.Entities.CadastrosEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Cell")
                        .HasColumnType("text");

                    b.Property<int>("DobEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<int>("IdEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("LocationEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("LoginEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("NameEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Nat")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("PictureEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("RegisteredEntityId")
                        .HasColumnType("integer");

                    b.HasKey("IdInt");

                    b.HasIndex("DobEntityId")
                        .IsUnique();

                    b.HasIndex("IdEntityId")
                        .IsUnique();

                    b.HasIndex("LocationEntityId")
                        .IsUnique();

                    b.HasIndex("LoginEntityId")
                        .IsUnique();

                    b.HasIndex("NameEntityId")
                        .IsUnique();

                    b.HasIndex("PictureEntityId")
                        .IsUnique();

                    b.HasIndex("RegisteredEntityId")
                        .IsUnique();

                    b.ToTable("Cadastros");
                });

            modelBuilder.Entity("caserandomuser.Entities.CoordinatesEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Coordinateses");
                });

            modelBuilder.Entity("caserandomuser.Entities.DobEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Age")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdInt");

                    b.ToTable("Dobs");
                });

            modelBuilder.Entity("caserandomuser.Entities.IdEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Ids");
                });

            modelBuilder.Entity("caserandomuser.Entities.LocationEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int>("CoordinatesEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int>("Postcode")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("StreetEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TimezoneEntityId")
                        .HasColumnType("integer");

                    b.HasKey("IdInt");

                    b.HasIndex("CoordinatesEntityId")
                        .IsUnique();

                    b.HasIndex("StreetEntityId")
                        .IsUnique();

                    b.HasIndex("TimezoneEntityId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("caserandomuser.Entities.LoginEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Md5")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.Property<string>("Sha1")
                        .HasColumnType("text");

                    b.Property<string>("Sha256")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Uuid")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("caserandomuser.Entities.NameEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("First")
                        .HasColumnType("text");

                    b.Property<string>("Last")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("caserandomuser.Entities.PictureEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Large")
                        .HasColumnType("text");

                    b.Property<string>("Medium")
                        .HasColumnType("text");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("caserandomuser.Entities.RegisteredEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Age")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdInt");

                    b.ToTable("Registereds");
                });

            modelBuilder.Entity("caserandomuser.Entities.StreetEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("caserandomuser.Entities.TimezoneEntity", b =>
                {
                    b.Property<int>("IdInt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInt"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Offset")
                        .HasColumnType("text");

                    b.HasKey("IdInt");

                    b.ToTable("Timezones");
                });

            modelBuilder.Entity("caserandomuser.Entities.CadastrosEntity", b =>
                {
                    b.HasOne("caserandomuser.Entities.DobEntity", "Dob")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "DobEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.IdEntity", "Id")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "IdEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.LocationEntity", "Location")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "LocationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.LoginEntity", "Login")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "LoginEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.NameEntity", "Name")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "NameEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.PictureEntity", "Picture")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "PictureEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.RegisteredEntity", "Registered")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.CadastrosEntity", "RegisteredEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dob");

                    b.Navigation("Id");

                    b.Navigation("Location");

                    b.Navigation("Login");

                    b.Navigation("Name");

                    b.Navigation("Picture");

                    b.Navigation("Registered");
                });

            modelBuilder.Entity("caserandomuser.Entities.LocationEntity", b =>
                {
                    b.HasOne("caserandomuser.Entities.CoordinatesEntity", "Coordinates")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.LocationEntity", "CoordinatesEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.StreetEntity", "Street")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.LocationEntity", "StreetEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caserandomuser.Entities.TimezoneEntity", "Timezone")
                        .WithOne()
                        .HasForeignKey("caserandomuser.Entities.LocationEntity", "TimezoneEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinates");

                    b.Navigation("Street");

                    b.Navigation("Timezone");
                });
#pragma warning restore 612, 618
        }
    }
}
